#!/bin/sh

# Verificar vari√°veis de ambiente obrigat√≥rias
echo "Verificando vari√°veis de ambiente..."

# Lista de vari√°veis obrigat√≥rias
REQUIRED_VARS="PORT WORKER_PORT DATABASE_URL REDIS_URL JWT_SECRET"

# Verificar cada vari√°vel
for VAR in $REQUIRED_VARS; do
  if [ -z "$(eval echo \$$VAR)" ]; then
    echo "‚ö†Ô∏è ERRO: Vari√°vel de ambiente $VAR n√£o est√° definida!"
    echo "Por favor, configure esta vari√°vel no Coolify ou arquivo .env"
    exit 1
  else
    echo "‚úÖ $VAR: OK"
  fi
done

echo "üîÑ Iniciando aplica√ß√£o com as seguintes configura√ß√µes:"
echo "- PORT: $PORT"
echo "- WORKER_PORT: $WORKER_PORT"
echo "- DATABASE_URL: $(echo $DATABASE_URL | sed 's/:.*.@/:***@/')"
echo "- REDIS_URL: $REDIS_URL"
echo "- JWT_SECRET: $(echo $JWT_SECRET | cut -c1-5)***"

# Iniciar o worker em segundo plano
echo "üöÄ Iniciando worker..."
node dist/worker.js &
WORKER_PID=$!

# Iniciar o servidor principal
echo "üöÄ Iniciando servidor principal..."
node dist/server.js &
SERVER_PID=$!

# Fun√ß√£o para lidar com o encerramento
handle_term() {
  echo "Encerrando processos..."
  kill $WORKER_PID
  kill $SERVER_PID
  exit 0
}

# Registrar tratamento de sinal
trap handle_term SIGTERM SIGINT

# Manter o script em execu√ß√£o
wait 